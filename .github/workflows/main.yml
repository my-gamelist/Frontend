name: CI/CD Docker Frontend Deployment on EC2

on:
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mygamelist-frontend
          IMAGE_TAG: latest
          APP_HOST: ${{ secrets.APP_HOST }}
        run: |
          docker build --build-arg APP_HOST=$APP_HOST -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  
  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Copy files for Docker volues (via SCP)
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_PUBLIC_DNS }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PEM }}
          port: 22
          source: 'nginx.conf'
          target: './'
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Executing SSH Commands on EC2
        uses: appleboy/ssh-action@master
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hexgraph-frontend
          IMAGE_TAG: latest
        with:
          host: ${{ secrets.AWS_EC2_PUBLIC_DNS }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PEM }}
          envs: ECR_REGISTRY,ECR_REPOSITORY,IMAGE_TAG
          script: |
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $ECR_REGISTRY
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG mygamelist-frontend
            docker rmi -f $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker rmi $(docker images -f "dangling=true" -q)
            docker-compose up -d